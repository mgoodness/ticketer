// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	GetArtistInfoRequest
	ListArtistsRequest
	ListArtistsResponse
	ArtistInfo
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetArtistInfoRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetArtistInfoRequest) Reset()                    { *m = GetArtistInfoRequest{} }
func (m *GetArtistInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetArtistInfoRequest) ProtoMessage()               {}
func (*GetArtistInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetArtistInfoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListArtistsRequest struct {
}

func (m *ListArtistsRequest) Reset()                    { *m = ListArtistsRequest{} }
func (m *ListArtistsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListArtistsRequest) ProtoMessage()               {}
func (*ListArtistsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ListArtistsResponse struct {
	Artists []*ArtistInfo `protobuf:"bytes,1,rep,name=artists" json:"artists,omitempty"`
}

func (m *ListArtistsResponse) Reset()                    { *m = ListArtistsResponse{} }
func (m *ListArtistsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListArtistsResponse) ProtoMessage()               {}
func (*ListArtistsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListArtistsResponse) GetArtists() []*ArtistInfo {
	if m != nil {
		return m.Artists
	}
	return nil
}

type ArtistInfo struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ArtistInfo) Reset()                    { *m = ArtistInfo{} }
func (m *ArtistInfo) String() string            { return proto.CompactTextString(m) }
func (*ArtistInfo) ProtoMessage()               {}
func (*ArtistInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ArtistInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ArtistInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*GetArtistInfoRequest)(nil), "api.GetArtistInfoRequest")
	proto.RegisterType((*ListArtistsRequest)(nil), "api.ListArtistsRequest")
	proto.RegisterType((*ListArtistsResponse)(nil), "api.ListArtistsResponse")
	proto.RegisterType((*ArtistInfo)(nil), "api.ArtistInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ArtistService service

type ArtistServiceClient interface {
	GetArtistInfo(ctx context.Context, in *GetArtistInfoRequest, opts ...grpc.CallOption) (*ArtistInfo, error)
	ListArtists(ctx context.Context, in *ListArtistsRequest, opts ...grpc.CallOption) (*ListArtistsResponse, error)
}

type artistServiceClient struct {
	cc *grpc.ClientConn
}

func NewArtistServiceClient(cc *grpc.ClientConn) ArtistServiceClient {
	return &artistServiceClient{cc}
}

func (c *artistServiceClient) GetArtistInfo(ctx context.Context, in *GetArtistInfoRequest, opts ...grpc.CallOption) (*ArtistInfo, error) {
	out := new(ArtistInfo)
	err := grpc.Invoke(ctx, "/api.ArtistService/GetArtistInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artistServiceClient) ListArtists(ctx context.Context, in *ListArtistsRequest, opts ...grpc.CallOption) (*ListArtistsResponse, error) {
	out := new(ListArtistsResponse)
	err := grpc.Invoke(ctx, "/api.ArtistService/ListArtists", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ArtistService service

type ArtistServiceServer interface {
	GetArtistInfo(context.Context, *GetArtistInfoRequest) (*ArtistInfo, error)
	ListArtists(context.Context, *ListArtistsRequest) (*ListArtistsResponse, error)
}

func RegisterArtistServiceServer(s *grpc.Server, srv ArtistServiceServer) {
	s.RegisterService(&_ArtistService_serviceDesc, srv)
}

func _ArtistService_GetArtistInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtistInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtistServiceServer).GetArtistInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ArtistService/GetArtistInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtistServiceServer).GetArtistInfo(ctx, req.(*GetArtistInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtistService_ListArtists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListArtistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtistServiceServer).ListArtists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ArtistService/ListArtists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtistServiceServer).ListArtists(ctx, req.(*ListArtistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArtistService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ArtistService",
	HandlerType: (*ArtistServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetArtistInfo",
			Handler:    _ArtistService_GetArtistInfo_Handler,
		},
		{
			MethodName: "ListArtists",
			Handler:    _ArtistService_ListArtists_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x52, 0xe3, 0x12, 0x71, 0x4f,
	0x2d, 0x71, 0x2c, 0x2a, 0xc9, 0x2c, 0x2e, 0xf1, 0xcc, 0x4b, 0xcb, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d,
	0x2d, 0x2e, 0x11, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62,
	0xca, 0x4c, 0x51, 0x12, 0xe1, 0x12, 0xf2, 0xc9, 0x2c, 0x86, 0x2a, 0x2c, 0x86, 0xaa, 0x52, 0x72,
	0xe0, 0x12, 0x46, 0x11, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0xd2, 0xe4, 0x62, 0x4f, 0x84,
	0x08, 0x49, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x1b, 0xf1, 0xeb, 0x81, 0xac, 0x45, 0xb2, 0x05, 0x26,
	0xaf, 0x64, 0xc0, 0xc5, 0x85, 0x10, 0x46, 0xb7, 0x55, 0x48, 0x88, 0x8b, 0x25, 0x2f, 0x31, 0x37,
	0x55, 0x82, 0x09, 0x2c, 0x02, 0x66, 0x1b, 0x4d, 0x62, 0xe4, 0xe2, 0x85, 0x68, 0x09, 0x4e, 0x2d,
	0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xb2, 0xe5, 0xe2, 0x45, 0xf1, 0x83, 0x90, 0x24, 0xd8, 0x3a, 0x6c,
	0xfe, 0x92, 0x42, 0x77, 0x89, 0x12, 0x83, 0x90, 0x13, 0x17, 0x37, 0x92, 0x27, 0x84, 0xc4, 0xc1,
	0x2a, 0x30, 0x3d, 0x2b, 0x25, 0x81, 0x29, 0x01, 0xf1, 0xaf, 0x12, 0x43, 0x12, 0x1b, 0x38, 0x48,
	0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x76, 0xe5, 0xaa, 0x5f, 0x01, 0x00, 0x00,
}
