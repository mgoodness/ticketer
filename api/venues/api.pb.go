// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	GetVenueInfoRequest
	ListVenuesRequest
	ListVenuesResponse
	VenueInfo
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetVenueInfoRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetVenueInfoRequest) Reset()                    { *m = GetVenueInfoRequest{} }
func (m *GetVenueInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetVenueInfoRequest) ProtoMessage()               {}
func (*GetVenueInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetVenueInfoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListVenuesRequest struct {
}

func (m *ListVenuesRequest) Reset()                    { *m = ListVenuesRequest{} }
func (m *ListVenuesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListVenuesRequest) ProtoMessage()               {}
func (*ListVenuesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ListVenuesResponse struct {
	Venues []*VenueInfo `protobuf:"bytes,1,rep,name=venues" json:"venues,omitempty"`
}

func (m *ListVenuesResponse) Reset()                    { *m = ListVenuesResponse{} }
func (m *ListVenuesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListVenuesResponse) ProtoMessage()               {}
func (*ListVenuesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListVenuesResponse) GetVenues() []*VenueInfo {
	if m != nil {
		return m.Venues
	}
	return nil
}

type VenueInfo struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	City     string `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	State    string `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	Capacity int32  `protobuf:"varint,5,opt,name=capacity" json:"capacity,omitempty"`
}

func (m *VenueInfo) Reset()                    { *m = VenueInfo{} }
func (m *VenueInfo) String() string            { return proto.CompactTextString(m) }
func (*VenueInfo) ProtoMessage()               {}
func (*VenueInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *VenueInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VenueInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VenueInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *VenueInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *VenueInfo) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func init() {
	proto.RegisterType((*GetVenueInfoRequest)(nil), "api.GetVenueInfoRequest")
	proto.RegisterType((*ListVenuesRequest)(nil), "api.ListVenuesRequest")
	proto.RegisterType((*ListVenuesResponse)(nil), "api.ListVenuesResponse")
	proto.RegisterType((*VenueInfo)(nil), "api.VenueInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VenueService service

type VenueServiceClient interface {
	GetVenueInfo(ctx context.Context, in *GetVenueInfoRequest, opts ...grpc.CallOption) (*VenueInfo, error)
	ListVenues(ctx context.Context, in *ListVenuesRequest, opts ...grpc.CallOption) (*ListVenuesResponse, error)
}

type venueServiceClient struct {
	cc *grpc.ClientConn
}

func NewVenueServiceClient(cc *grpc.ClientConn) VenueServiceClient {
	return &venueServiceClient{cc}
}

func (c *venueServiceClient) GetVenueInfo(ctx context.Context, in *GetVenueInfoRequest, opts ...grpc.CallOption) (*VenueInfo, error) {
	out := new(VenueInfo)
	err := grpc.Invoke(ctx, "/api.VenueService/GetVenueInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *venueServiceClient) ListVenues(ctx context.Context, in *ListVenuesRequest, opts ...grpc.CallOption) (*ListVenuesResponse, error) {
	out := new(ListVenuesResponse)
	err := grpc.Invoke(ctx, "/api.VenueService/ListVenues", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VenueService service

type VenueServiceServer interface {
	GetVenueInfo(context.Context, *GetVenueInfoRequest) (*VenueInfo, error)
	ListVenues(context.Context, *ListVenuesRequest) (*ListVenuesResponse, error)
}

func RegisterVenueServiceServer(s *grpc.Server, srv VenueServiceServer) {
	s.RegisterService(&_VenueService_serviceDesc, srv)
}

func _VenueService_GetVenueInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVenueInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VenueServiceServer).GetVenueInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.VenueService/GetVenueInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VenueServiceServer).GetVenueInfo(ctx, req.(*GetVenueInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VenueService_ListVenues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVenuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VenueServiceServer).ListVenues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.VenueService/ListVenues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VenueServiceServer).ListVenues(ctx, req.(*ListVenuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VenueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.VenueService",
	HandlerType: (*VenueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVenueInfo",
			Handler:    _VenueService_GetVenueInfo_Handler,
		},
		{
			MethodName: "ListVenues",
			Handler:    _VenueService_ListVenues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xbb, 0x49, 0x53, 0xcc, 0x58, 0x0a, 0x4e, 0x45, 0x97, 0x9c, 0xc2, 0x82, 0x92, 0x53,
	0x0f, 0xf5, 0x26, 0x82, 0x47, 0x11, 0x3c, 0x45, 0xf0, 0xbe, 0xa6, 0x23, 0xec, 0xc1, 0xdd, 0xb5,
	0xbb, 0x29, 0xf8, 0x0c, 0xbe, 0xb4, 0x64, 0xb6, 0xb4, 0xa5, 0xed, 0x6d, 0xe6, 0x9b, 0x1f, 0xfe,
	0xe4, 0x5b, 0x28, 0xb5, 0x37, 0x0b, 0xbf, 0x76, 0xd1, 0x61, 0xae, 0xbd, 0x51, 0x77, 0x30, 0x7f,
	0xa1, 0xf8, 0x41, 0xb6, 0xa7, 0x57, 0xfb, 0xe5, 0x5a, 0xfa, 0xe9, 0x29, 0x44, 0x9c, 0x41, 0x66,
	0x56, 0x52, 0xd4, 0xa2, 0x29, 0xdb, 0xcc, 0xac, 0xd4, 0x1c, 0xae, 0xde, 0x4c, 0x48, 0xb9, 0xb0,
	0x0d, 0xa9, 0x27, 0xc0, 0x43, 0x18, 0xbc, 0xb3, 0x81, 0xf0, 0x1e, 0x26, 0x1b, 0x26, 0x52, 0xd4,
	0x79, 0x73, 0xb9, 0x9c, 0x2d, 0x86, 0xca, 0x7d, 0xc3, 0xf6, 0xaa, 0x7a, 0x28, 0x77, 0xf0, 0xb8,
	0x0f, 0x11, 0xc6, 0x56, 0x7f, 0x93, 0xcc, 0x98, 0xf0, 0x3c, 0xb0, 0xce, 0xc4, 0x5f, 0x99, 0x27,
	0x36, 0xcc, 0x78, 0x0d, 0x45, 0x88, 0x3a, 0x92, 0x1c, 0x33, 0x4c, 0x0b, 0x56, 0x70, 0xd1, 0x69,
	0xaf, 0x39, 0x5d, 0xd4, 0xa2, 0x29, 0xda, 0xdd, 0xbe, 0xfc, 0x13, 0x30, 0xe5, 0xde, 0x77, 0x5a,
	0x6f, 0x4c, 0x47, 0xf8, 0x08, 0xd3, 0x43, 0x03, 0x28, 0xf9, 0x7b, 0xcf, 0x48, 0xa9, 0x8e, 0xfe,
	0x44, 0x8d, 0xf0, 0x19, 0x60, 0x6f, 0x00, 0x6f, 0xf8, 0x7e, 0xe2, 0xa9, 0xba, 0x3d, 0xe1, 0x49,
	0x95, 0x1a, 0x7d, 0x4e, 0xf8, 0x29, 0x1e, 0xfe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x5f, 0x84,
	0x1e, 0x97, 0x01, 0x00, 0x00,
}
